
.parent-container {
    background-color: beige;
    border: 2px solid black;
    width: 75vw;
    height: 175vh;
    padding: 5px;
    font-family: Arial, Helvetica, sans-serif;

    position: relative;
    /* causes absolute container to position inside parent container */
}

.child {
    padding: 25px;
}

.static {
    border: 2px solid red;
    background-color: red;
    /* top, bottom, left, right, z-index properties have NO EFFECT */
}

.relative {
    border: 2px solid blueviolet;
    background-color: blueviolet;
    /* by default acts like static */
    /* can use t, b, l, r to take the element out of the flow */
    /* ! DO NOT USE IT! It's too manual */
}

.absolute {
    border: 2px solid green;
    background-color: green;

    /* position: absolute; */
    /* takes element out of the flow */
    top: 0;
    /* relative  */
}

.fixed {
    border: 2px solid teal;
    background-color: teal;

    position: fixed;
    top: 0;
    /* it ignores parent  */
    /* based on  ENTIRE viewport */
    /* absolute on parent relative will scroll */
    /*  fixed will not scroll away */
}

.sticky {
    border: 2px solid gray;
    background-color: gray;

    position: sticky;
    top: 75px;
    /* acts like a combination of fixed and absolute */
    /* stays fixed once the scroll occures */
    /* it's relative by default (doesn't move out of normal flow) */
}

/* 
    CSS Position Property

    ? Static
    * default
    * positioned in relation to elements
    * top, bottom, left, right, z-index have NO effect

    ? Relative
    * just like static
    * can be changed using top, bottom, left, right, z-index
    * values are relative to its original static position
    ! DON'T USE IT! Breaks the flow!

    ? Absolute
    * removes element from the flow
    * positions it relative to parent container
    * if parent is static, it will move outside of parent container
    * if parent is relative, it will move within parent container
    * positioning defined by top, bottom, left, right, z-index

    ? Fixed
    * like absolute
    * positioned to viewport
    * doesn't move when scrolling
    * positioning defined by top, bottom, left, right, z-index

    ? Sticky
    * mix of relative and fixed
    * relative to the flow
    * position definition used for when you start scrolling
    * stays fixed when scrolling; relative when stationary

*/

/* 
? Dsiplay Property
* Treats an element as block or inline
* Blocks are created top-to-bottom
* Inline are positioned side-by-side
*/

.display-container {
    margin-top: 2em;
}

.block-container {
    border: 2px solid black;
    margin-top: 2px;
}

.inline-element {
    margin: 5px;
    display: block;
}

.inline-block {
    border: 2px solid black;
    margin: 2px;
    display: inline-block;
    width: 125px;
    /* allows us to set the width and height of an inline element  */
}

.float-container {
    margin-top: 2em;
    border: 2px solid blue;
    height: 20vw;
}

.float-box {
    margin: 5px;
    border: 2px solid orange;
    background-color: orange;
    width: 50px;
    height: 50px;

    float: right;
    /* shifts elements from left to right */
}